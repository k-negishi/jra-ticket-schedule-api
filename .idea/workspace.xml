<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3c8f921e-2047-440e-8ba3-af4752be3c8f" name="Changes" comment="add readme" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
      <option value="repository" />
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="customMavenHome" value="$APPLICATION_HOME_DIR$/plugins/maven/lib/maven3" />
        <option name="mavenHomeTypeForPersistence" value="CUSTOM" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="30ixlSmEGHJP2P4P9V5RcTZGC4j" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python tests.Python tests for test_calendar_service.TestCalendarMapping.test_get_calendar_config_invalid_year.executor": "Run",
    "Python tests.Python tests for test_calendar_service.TestCalendarService.executor": "Run",
    "Python tests.Python tests for test_calendar_service.TestCalendarService.test_get_events_by_date.executor": "Run",
    "Python tests.Python tests for test_main.TestLambdaHandler.executor": "Run",
    "Python tests.Python tests for test_main.TestLambdaHandler.test_lambda_handler_empty_query_string.executor": "Run",
    "Python tests.Python tests for test_main.TestLambdaHandler.test_lambda_handler_success.executor": "Run",
    "Python tests.Python tests in tests.executor": "Debug",
    "Python.test_main.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/Kei/Development/projects/jra-ticket-schedule-api",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.18872356",
    "project.structure.side.proportion": "0.45172414",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "settings.editor.splitter.proportion": "0.3337041"
  }
}]]></component>
  <component name="RunManager" selected="Python tests.Python tests for test_main.TestLambdaHandler.test_lambda_handler_success">
    <configuration name="Python tests for test_calendar_service.TestCalendarService.test_get_events_by_date" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="jra-ticket-schedule-api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lambda/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_calendar_service.TestCalendarService.test_get_events_by_date&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_main.TestLambdaHandler" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="jra-ticket-schedule-api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lambda/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_main.TestLambdaHandler&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_main.TestLambdaHandler.test_lambda_handler_empty_query_string" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="jra-ticket-schedule-api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lambda/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_main.TestLambdaHandler.test_lambda_handler_empty_query_string&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_main.TestLambdaHandler.test_lambda_handler_success" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="jra-ticket-schedule-api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lambda/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_main.TestLambdaHandler.test_lambda_handler_success&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in tests" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="jra-ticket-schedule-api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/lambda/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/lambda/tests&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_main.TestLambdaHandler.test_lambda_handler_success" />
        <item itemvalue="Python tests.Python tests in tests" />
        <item itemvalue="Python tests.Python tests for test_main.TestLambdaHandler" />
        <item itemvalue="Python tests.Python tests for test_main.TestLambdaHandler.test_lambda_handler_empty_query_string" />
        <item itemvalue="Python tests.Python tests for test_calendar_service.TestCalendarService.test_get_events_by_date" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3c8f921e-2047-440e-8ba3-af4752be3c8f" name="Changes" comment="" />
      <created>1754124345786</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1754124345786</updated>
    </task>
    <task id="LOCAL-00001" summary="add .gitignore files for project directories">
      <option name="closed" value="true" />
      <created>1754130863701</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1754130863701</updated>
    </task>
    <task id="LOCAL-00002" summary="remove: IDE-related entries from .gitignore">
      <option name="closed" value="true" />
      <created>1754130947684</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1754130947684</updated>
    </task>
    <task id="LOCAL-00003" summary="add: initial implementation of JRA Calendar API with AWS Lambda integration">
      <option name="closed" value="true" />
      <created>1754130956867</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1754130956867</updated>
    </task>
    <task id="LOCAL-00004" summary="add: implement JRA Calendar API with AWS Lambda, including response handling and calendar configuration">
      <option name="closed" value="true" />
      <created>1754130982531</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1754130982531</updated>
    </task>
    <task id="LOCAL-00005" summary="Add requirements files for production and development&#10;&#10;Created `requirements.txt` for production dependencies and `requirements-dev.txt` for development dependencies. This includes libraries for Google APIs, AWS SDK (boto3), and key development tools like pytest. Ensures clear segregation of runtime and development dependencies.">
      <option name="closed" value="true" />
      <created>1754131040124</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1754131040124</updated>
    </task>
    <task id="LOCAL-00006" summary="Add example environment variables file for Lambda setup&#10;&#10;This commit introduces an `env.example` file to document required environment variables for the Lambda configuration. It includes settings for Google Cloud, calendar configurations, and AWS. This serves as a reference for setting up the deployment environment.">
      <option name="closed" value="true" />
      <created>1754131094486</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1754131094486</updated>
    </task>
    <task id="LOCAL-00007" summary="Add package.json and package-lock.json for Lambda setup&#10;&#10;Added `package.json` and `package-lock.json` to initialize the project dependencies and configuration for the JRA Calendar API Lambda function. This includes scripts for deployment, logs, local invocation, and testing, as well as required packages for serverless deployment.">
      <option name="closed" value="true" />
      <created>1754131115256</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1754131115256</updated>
    </task>
    <task id="LOCAL-00008" summary="Add calendar service and Lambda handler for JRA events API&#10;&#10;Implemented a calendar service to interface with Google Calendar, added utilities for response handling, and created a Lambda handler to fetch and sort JRA calendar events by date. Configurations and API credentials are managed via environment variables.">
      <option name="closed" value="true" />
      <created>1754131131085</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1754131131085</updated>
    </task>
    <task id="LOCAL-00009" summary="Add calendar service and Lambda handler for JRA events API&#10;&#10;Implemented a calendar service to interface with Google Calendar, added utilities for response handling, and created a Lambda handler to fetch and sort JRA calendar events by date. Configurations and API credentials are managed via environment variables.">
      <option name="closed" value="true" />
      <created>1754131136612</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1754131136612</updated>
    </task>
    <task id="LOCAL-00010" summary="Update IDE configuration with test cases and task history&#10;&#10;Added new test configurations for `TestLambdaHandler` and modified default test selections. Updated task history and IDE settings to reflect recent project changes, including environment setup and task tracking.">
      <option name="closed" value="true" />
      <created>1754131352184</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1754131352184</updated>
    </task>
    <task id="LOCAL-00011" summary="Add debug print statement in test_main.py&#10;&#10;A print statement was introduced to output the `body` variable during the test for additional debugging information. This will help in verifying the data structure during test execution.">
      <option name="closed" value="true" />
      <created>1754131361591</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1754131361591</updated>
    </task>
    <task id="LOCAL-00012" summary="Add debug print statement in test_main.py&#10;&#10;A print statement was introduced to output the `body` variable during the test for additional debugging information. This will help in verifying the data structure during test execution.">
      <option name="closed" value="true" />
      <created>1754131370748</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1754131370748</updated>
    </task>
    <task id="LOCAL-00013" summary="add readme">
      <option name="closed" value="true" />
      <created>1754131389806</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1754131389806</updated>
    </task>
    <option name="localTasksCounter" value="14" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add initial implementation of JRA Calendar API with AWS Lambda support" />
    <MESSAGE value="add .gitignore files for project directories" />
    <MESSAGE value="remove: IDE-related entries from .gitignore" />
    <MESSAGE value="add: initial implementation of JRA Calendar API with AWS Lambda integration" />
    <MESSAGE value="add: implement JRA Calendar API with AWS Lambda, including calendar configuration, response handling, and setup instructions" />
    <MESSAGE value="Add requirements files for production and development&#10;&#10;Created `requirements.txt` for production dependencies and `requirements-dev.txt` for development dependencies. This includes libraries for Google APIs, AWS SDK (boto3), and key development tools like pytest. Ensures clear segregation of runtime and development dependencies." />
    <MESSAGE value="add: implement JRA Calendar API with AWS Lambda, including response handling and calendar configuration" />
    <MESSAGE value="Add env.example file for configuration reference&#10;&#10;Include Google Cloud, calendar, and AWS-related environment variables in the example file. This provides a template for setting up the required configurations easily." />
    <MESSAGE value="Add example environment variables file for Lambda setup&#10;&#10;This commit introduces an `env.example` file to document required environment variables for the Lambda configuration. It includes settings for Google Cloud, calendar configurations, and AWS. This serves as a reference for setting up the deployment environment." />
    <MESSAGE value="Add package.json and package-lock.json for Lambda setup&#10;&#10;Added `package.json` and `package-lock.json` to initialize the project dependencies and configuration for the JRA Calendar API Lambda function. This includes scripts for deployment, logs, local invocation, and testing, as well as required packages for serverless deployment." />
    <MESSAGE value="Add calendar service and Lambda handler for JRA events API&#10;&#10;Implemented a calendar service to interface with Google Calendar, added utilities for response handling, and created a Lambda handler to fetch and sort JRA calendar events by date. Configurations and API credentials are managed via environment variables." />
    <MESSAGE value="Update IDE configuration with test cases and task history&#10;&#10;Added new test configurations for `TestLambdaHandler` and modified default test selections. Updated task history and IDE settings to reflect recent project changes, including environment setup and task tracking." />
    <MESSAGE value="Add debug print statement in test_main.py&#10;&#10;A print statement was introduced to output the `body` variable during the test for additional debugging information. This will help in verifying the data structure during test execution." />
    <MESSAGE value="add readme" />
    <option name="LAST_COMMIT_MESSAGE" value="add readme" />
  </component>
</project>